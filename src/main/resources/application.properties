########################################
# SERVER CONFIGURATION
########################################
server.port=8081
spring.main.banner-mode=off

########################################
# DATASOURCE / DATABASE
########################################
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:mysql://localhost:3307/productmswebShop?useSSL=false
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

########################################
# JPA / HIBERNATE CONFIGURATION
########################################
# Dialect for MySQL to generate optimized SQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# Schema generation strategy: update existing schema
spring.jpa.hibernate.ddl-auto=update

# Generate DDL scripts
spring.jpa.generate-ddl=true

# Hibernate event observer (avoids HHH-9106 warning)
spring.jpa.properties.hibernate.event.merge.entity_copy_observer=log

########################################
# JWT / SECURITY
########################################
# Application secret for JWT signing
app.jwt.secret=${JWT_SECRET}

# Token expiration times (milliseconds)
security.jwt.expiration-time=3600000
security.jwt.refresh-expiration-time=7200000

# JWT issuer URI
security.jwt.issuer=http://localhost:8084/realms/myrealm
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8084/realms/myrealm

########################################
# KEYCLOAK CLIENT
########################################
keycloak.token-uri=http://localhost:8084/realms/myrealm/protocol/openid-connect/token
keycloak.client-id=product-service
keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}

########################################
# LOGGING
########################################
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

########################################
# SQL INIT
########################################
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:addRoles.sql

########################################
# KAFKA CONFIGURATION
########################################
spring.kafka.bootstrap-servers=localhost:9092

# Consumer configuration
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
